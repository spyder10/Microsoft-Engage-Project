[{"C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\index.js":"1","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\App.js":"2","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\service\\firebase.js":"3","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\Login.js":"4","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\SignUp.js":"5","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\Chat.js":"6","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\hooks\\useAuth.js":"7","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\hooks\\useResolved.js":"8","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\FormField.js":"9","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\context\\ChatContext.js":"10","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\Scheduler.js":"11","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\PrivateRoute.js":"12","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\context\\AuthContext.js":"13","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\SchedulerTeacher.js":"14","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\CustomNavbar.js":"15","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\StudentDetailItem.js":"16","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\SchedulerTeacherTable.js":"17","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\InputTextfield.js":"18","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\CreateNewForm.js":"19","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\CustomOptions.js":"20"},{"size":404,"mtime":1637751780485,"results":"21","hashOfConfig":"22"},{"size":1623,"mtime":1637751780453,"results":"23","hashOfConfig":"22"},{"size":658,"mtime":1636639397082,"results":"24","hashOfConfig":"22"},{"size":5495,"mtime":1637751780461,"results":"25","hashOfConfig":"22"},{"size":8076,"mtime":1637767612659,"results":"26","hashOfConfig":"22"},{"size":3502,"mtime":1637769451308,"results":"27","hashOfConfig":"22"},{"size":629,"mtime":1637767847807,"results":"28","hashOfConfig":"22"},{"size":746,"mtime":1636642006522,"results":"29","hashOfConfig":"22"},{"size":756,"mtime":1637751780461,"results":"30","hashOfConfig":"22"},{"size":2507,"mtime":1637766216188,"results":"31","hashOfConfig":"22"},{"size":9931,"mtime":1637838283741,"results":"32","hashOfConfig":"22"},{"size":675,"mtime":1637751780461,"results":"33","hashOfConfig":"22"},{"size":618,"mtime":1637751780477,"results":"34","hashOfConfig":"22"},{"size":10691,"mtime":1637751780469,"results":"35","hashOfConfig":"22"},{"size":1894,"mtime":1637751780453,"results":"36","hashOfConfig":"22"},{"size":781,"mtime":1637751780477,"results":"37","hashOfConfig":"22"},{"size":2586,"mtime":1637751780469,"results":"38","hashOfConfig":"22"},{"size":201,"mtime":1637751780461,"results":"39","hashOfConfig":"22"},{"size":3582,"mtime":1637751780453,"results":"40","hashOfConfig":"22"},{"size":142,"mtime":1637751780453,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1972az8",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\index.js",[],["93","94"],"C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\App.js",["95","96","97","98","99"],"import { useEffect, useState } from \"react\";\r\nimport { Link, Route, Switch, useHistory, Redirect } from \"react-router-dom\";\r\n// import useAuth from \"../hooks/useAuth\";\r\nimport { useResolved } from \"../hooks/useResolved\";\r\nimport Login from \"./Login\";\r\nimport SignUp from \"./SignUp\";\r\nimport Chat from \"./Chat\";\r\nimport SchedulerTeacher from \"./SchedulerTeacher\";\r\nimport { ChatProvider } from \"../context/ChatContext\";\r\nimport Scheduler from \"./Scheduler\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport useAuth from \"../hooks/useAuth\";\r\n\r\nfunction App() {\r\n  // const { authUser } = useAuth();\r\n  // const authResolved = useResolved();\r\n\r\n  // const history = useHistory();\r\n\r\n  // useEffect(() => {\r\n  //   console.log(authUser, authResolved);\r\n  //   if (authResolved) {\r\n  //     history.push(!!authUser ? \"/\" : \"/login\");\r\n  //   }\r\n  // }, [authResolved, authUser, history]);\r\n  const { authUser } = useAuth();\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (authUser) {\r\n      history.push(\"/\");\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [authUser, history]);\r\n\r\n  return (\r\n    <div className=\"w-100\">\r\n      <ChatProvider authUser={authUser}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Chat}></Route>\r\n          <Route path=\"/signup\" component={SignUp}></Route>\r\n          <Route path=\"/login\" component={Login}></Route>\r\n          <Route path=\"/scheduler\" component={Scheduler}></Route>\r\n          <Route path=\"/scheduler_teacher\" component={SchedulerTeacher}></Route>\r\n        </Switch>\r\n      </ChatProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\service\\firebase.js",[],"C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\Login.js",["100","101","102","103","104","105","106"],"import { useState } from \"react\";\r\nimport { fb } from \"../service/firebase\";\r\nimport { useHistory, Redirect, Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport React from \"react\";\r\nimport FormField from \"./FormField\";\r\nimport Typed from \"react-typed\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Link as MaterialLink,\r\n} from \"@material-ui/core\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport \"../../src/index.css\";\r\n\r\nimport zIndex from \"@material-ui/core/styles/zIndex\";\r\n\r\nconst paperStyle = {\r\n  padding: 20,\r\n  // height: \"73vh\",\r\n  background: \"#000000\",\r\n  opacity: \"0.7\",\r\n  color: \"white\",\r\n  width: 400,\r\n  margin: \"0 auto\",\r\n};\r\n\r\nexport default function Login() {\r\n  const history = useHistory();\r\n  const [serverError, setServerError] = useState(\"\");\r\n\r\n  const defaultValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().required(\"Required\"),\r\n    password: Yup.string().required(\"Required\"),\r\n  });\r\n\r\n  const login = ({ email, password }, { setSubmitting }) => {\r\n    fb.auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        if (!res.user) {\r\n          setServerError(\r\n            \"We're having trouble logging you in. Please try again.\"\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.code === \"auth/wrong-password\") {\r\n          setServerError(\"Invalid credentials\");\r\n        } else if (err.code === \"auth/user-not-found\") {\r\n          setServerError(\"No account for this email\");\r\n        } else {\r\n          setServerError(\"Something went wrong :(\");\r\n        }\r\n      })\r\n      .finally(() => setSubmitting(false));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"showcase\">\r\n        <div className=\"showcase-top row\">\r\n          <h1 className=\"text-danger text-center mt-3\">Scheduler</h1>\r\n        </div>\r\n        <div className=\"showcase-content box\">\r\n          <h2 className=\"text-danger\">\r\n            Microsoft Engage Mentorship Program 2021\r\n          </h2>\r\n          <Typed\r\n            className=\"typed-text\"\r\n            strings={[\r\n              \"Take Preference Surveys\",\r\n              \"Visulize Student Preferences\",\r\n              \"Benificial for 50% Attendence Model\",\r\n              \"Collaborate with students\",\r\n              \"Make Attendence Sheets\",\r\n            ]}\r\n            typeSpeed={40}\r\n            backspeed={60}\r\n            loop\r\n          />\r\n        </div>\r\n        <div className=\"bg-col\">\r\n          <Grid\r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            style={{\r\n              minHeight: \"100vh\",\r\n              zIndex: 90,\r\n              position: \"absolute\",\r\n              maxWidth: \"450px\",\r\n              height: \"630px\",\r\n              marginLeft: \"50%\",\r\n              borderRadius: \"10px\",\r\n              boxSizing: \"border-box\",\r\n              transform: \"translateX(-50%) translateY(10%)\",\r\n            }}\r\n          >\r\n            <Paper style={paperStyle}>\r\n              <div>\r\n                <Grid align=\"center\">\r\n                  <h2 className=\"my-4 font-weight-bold-display-4 \">Login</h2>\r\n                </Grid>\r\n                <Formik\r\n                  onSubmit={login}\r\n                  initialValues={defaultValues}\r\n                  validateOnMount={true}\r\n                  validationSchema={validationSchema}\r\n                >\r\n                  {({ isValid, isSubmitting }) => {\r\n                    return (\r\n                      <Form>\r\n                        <FormField\r\n                          label=\"Email\"\r\n                          type=\"email\"\r\n                          name=\"email\"\r\n                        ></FormField>\r\n                        <FormField\r\n                          label=\"Password\"\r\n                          type=\"password\"\r\n                          name=\"password\"\r\n                        ></FormField>\r\n\r\n                        <Grid container className=\"my-3\">\r\n                          <Typography>\r\n                            Don't have an account yet ?{\" \"}\r\n                            <MaterialLink>\r\n                              <span\r\n                                className=\"auth-link text-danger font-weight-bold\"\r\n                                onClick={() => {\r\n                                  history.push(\"/signup\");\r\n                                }}\r\n                              >\r\n                                Sign Up!\r\n                              </span>\r\n                            </MaterialLink>\r\n                          </Typography>\r\n                        </Grid>\r\n\r\n                        <button\r\n                          className=\"btn btn-dark mt-3\"\r\n                          disabled={isSubmitting || !isValid}\r\n                          type=\"submit\"\r\n                        >\r\n                          {\" \"}\r\n                          Login{\" \"}\r\n                        </button>\r\n                      </Form>\r\n                    );\r\n                  }}\r\n                </Formik>\r\n                {!!serverError && <div className=\"error\">{serverError}</div>}\r\n              </div>\r\n            </Paper>\r\n          </Grid>\r\n        </div>\r\n      </header>\r\n      <footer class=\"footer\">\r\n        <h6 className=\"text-center mt-4\">Contact Us</h6>\r\n      </footer>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\SignUp.js",["107","108","109","110","111","112"],"import { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormField from \"../components/FormField\";\r\nimport * as Yup from \"yup\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { fb } from \"../service/firebase\";\r\nimport Typed from \"react-typed\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Link as MaterialLink,\r\n} from \"@material-ui/core\";\r\nimport useAuth from \"../hooks/useAuth\";\r\n\r\nfunction SignUp() {\r\n  const history = useHistory();\r\n  const [serverError, setServerError] = useState(\"\");\r\n  const { authUser, changeAuth } = useAuth();\r\n\r\n  const defaultValues = {\r\n    email: \"\",\r\n    password: \"\",\r\n    userName: \"\",\r\n    verifyPassword: \"\",\r\n  };\r\n  const paperStyle = {\r\n    padding: 20,\r\n    // height: \"73vh\",\r\n    background: \"#000000\",\r\n    opacity: \"0.7\",\r\n    color: \"white\",\r\n    width: 400,\r\n    margin: \"0 auto\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    role: Yup.string().required(\"Required\"),\r\n    email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n    password: Yup.string()\r\n      .required(\"Required\")\r\n      .min(8, \"Must be at least 8 characters\"),\r\n    verifyPassword: Yup.string()\r\n      .required(\"Required\")\r\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\"),\r\n    userName: Yup.string()\r\n      .required(\"Required\")\r\n      .matches(/^\\S*$/, \"No spaces\")\r\n      .min(3, \"Must be at least 3 characters\"),\r\n  });\r\n\r\n  const signup = ({ email, userName, password, role }, { setSubmitting }) => {\r\n    fb.auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        if (res?.user?.uid) {\r\n          fetch(\"/api/createUser\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              userName,\r\n              userId: res.user.uid,\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }).then((body) => {\r\n            fb.firestore\r\n              .collection(\"chatUsers\")\r\n              .doc(res.user.uid)\r\n              .set({ userName, avatar: \"\", role, isfilled: false });\r\n            changeAuth();\r\n          });\r\n        } else {\r\n          setServerError(\r\n            \"We're having trouble signing you up. Please try again.\"\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.code === \"auth/email-already-in-use\") {\r\n          setServerError(\"An account with this email already exists\");\r\n        } else {\r\n          setServerError(\r\n            \"We're having trouble signing you up. Please try again.\"\r\n          );\r\n        }\r\n      })\r\n      .finally(() => setSubmitting(false));\r\n  };\r\n\r\n  return (\r\n    <header className=\"showcase\">\r\n      <div className=\"showcase-top row\">\r\n        <h1 className=\"text-danger text-center mt-3\">Scheduler</h1>\r\n      </div>\r\n      <div className=\"showcase-content box\">\r\n        <h2 className=\"text-danger\">\r\n          Microsoft Engage Mentorship Program 2021\r\n        </h2>\r\n        <Typed\r\n          className=\"typed-text\"\r\n          strings={[\r\n            \"Take Preference Surveys\",\r\n            \"Visualize Student Preferences\",\r\n            \"Benificial for 50% Attendence Model\",\r\n            \"Collaborate with students\",\r\n            \"Make Preference/Attendence Sheets\",\r\n          ]}\r\n          typeSpeed={40}\r\n          backspeed={60}\r\n          loop\r\n        />\r\n      </div>\r\n      <div className=\"bg-col\">\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          style={{\r\n            minHeight: \"100vh\",\r\n            zIndex: 90,\r\n            position: \"relative\",\r\n            maxWidth: \"450px\",\r\n            height: \"630px\",\r\n            marginLeft: \"50%\",\r\n            borderRadius: \"10px\",\r\n            boxSizing: \"border-box\",\r\n            transform: \"translateX(-50%)\",\r\n          }}\r\n        >\r\n          <Paper style={paperStyle}>\r\n            <div className=\"auth-form\">\r\n              <Grid align=\"center\">\r\n                <h2 className=\"my-4 font-weight-bold-display-4 \">Sign Up</h2>\r\n              </Grid>\r\n\r\n              <Formik\r\n                onSubmit={signup}\r\n                validateOnMount={true}\r\n                initialValues={defaultValues}\r\n                validationSchema={validationSchema}\r\n              >\r\n                {({ isValid, isSubmitting }) => {\r\n                  return (\r\n                    <Form>\r\n                      <FormField\r\n                        label=\"User Name\"\r\n                        type=\"text\"\r\n                        name=\"userName\"\r\n                      ></FormField>\r\n                      <FormField\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                      ></FormField>\r\n                      <FormField\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                      ></FormField>\r\n                      <FormField\r\n                        label=\"Verify Password\"\r\n                        type=\"password\"\r\n                        name=\"verifyPassword\"\r\n                      ></FormField>\r\n                      {/* <FormField\r\n                        label=\"Role\"\r\n                        type=\"text\"\r\n                        name=\"role\"\r\n                      ></FormField> */}\r\n                      <div className=\"text-light\">\r\n                        <label>Role (Student/Teacher)</label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          name=\"role\"\r\n                          fullWidth\r\n                          className=\"bg-dark text-light mx-3 my-3 dropdown btn  btn-secondary\"\r\n                        >\r\n                          <option className=\"dropdown-item text-light\">\r\n                            Select Role\r\n                          </option>\r\n                          <option\r\n                            className=\"dropdown-item text-light\"\r\n                            value=\"student\"\r\n                          >\r\n                            Student\r\n                          </option>\r\n                          <option\r\n                            className=\"dropdown-item text-light\"\r\n                            value=\"teacher\"\r\n                          >\r\n                            Teacher\r\n                          </option>\r\n                        </Field>\r\n                        <ErrorMessage\r\n                          className=\"text-danger\"\r\n                          component=\"div\"\r\n                          name=\"role\"\r\n                        ></ErrorMessage>\r\n                      </div>\r\n                      <Grid container className=\"my-3\">\r\n                        <Typography>\r\n                          Already got an account?{\" \"}\r\n                          <MaterialLink>\r\n                            <span\r\n                              className=\"auth-link text-danger font-weight-bold\"\r\n                              onClick={() => history.push(\"/login\")}\r\n                            >\r\n                              Log In!\r\n                            </span>\r\n                          </MaterialLink>\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      <button\r\n                        className=\"btn btn-dark mt-3\"\r\n                        disabled={isSubmitting || !isValid}\r\n                        type=\"submit\"\r\n                      >\r\n                        {\" \"}\r\n                        SignUp{\" \"}\r\n                      </button>\r\n                    </Form>\r\n                  );\r\n                }}\r\n              </Formik>\r\n\r\n              {!!serverError && <div className=\"error\">{serverError}</div>}\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\nexport default SignUp;\r\n","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\Chat.js",["113"],"import { useEffect } from \"react\";\r\n\r\nimport { useChat } from \"../context/ChatContext\";\r\nimport { getChats, ChatEngine } from \"react-chat-engine\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport { Navbar, Nav, Container, Button, Badge } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { fb } from \"../service/firebase\";\r\n\r\nexport default function Chat() {\r\n  const {\r\n    myChats,\r\n    setMyChats,\r\n    chatConfig,\r\n    selectedChat,\r\n    selectChatClick,\r\n    setSelectedChat,\r\n  } = useChat();\r\n\r\n  console.log(chatConfig);\r\n\r\n  const authUser = useAuth();\r\n\r\n  const logOutHandler = () => {\r\n    fb.auth.signOut();\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(chatConfig);\r\n  }, [chatConfig]);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" expand=\"lg\">\r\n        <Container fluid>\r\n          <Navbar.Brand href=\"#home\">\r\n            <h1 className=\"text-danger\">Scheduler</h1>\r\n          </Navbar.Brand>\r\n          <Nav className=\"me-auto mx-4\">\r\n            {chatConfig && chatConfig.role === \"student\" && (\r\n              <h3>\r\n                <Badge bg=\"secondary\">\r\n                  <Link to=\"/scheduler\" className=\"text-decoration-none\">\r\n                    Student's Desk\r\n                  </Link>\r\n                </Badge>\r\n              </h3>\r\n            )}\r\n            {chatConfig && chatConfig.role === \"teacher\" && (\r\n              <h3>\r\n                <Badge bg=\"secondary\">\r\n                  <Link\r\n                    to=\"/scheduler_teacher\"\r\n                    className=\"text-decoration-none\"\r\n                  >\r\n                    Teacher's Desk{\" \"}\r\n                  </Link>\r\n                </Badge>\r\n              </h3>\r\n            )}\r\n          </Nav>\r\n          <Nav>\r\n            <Avatar\r\n              className=\"mx-2\"\r\n              sx={{ height: \"70px\", width: \"70px\" }}\r\n            ></Avatar>\r\n            <Navbar.Brand className=\"avatar text-light\">\r\n              {chatConfig\r\n                ? chatConfig.userName?.charAt(0).toUpperCase() +\r\n                  chatConfig.userName?.slice(1)\r\n                : \" \"}\r\n            </Navbar.Brand>{\" \"}\r\n            <Button\r\n              className=\"btn-outline-dark text-light\"\r\n              variant=\"secondary\"\r\n              onClick={logOutHandler}\r\n            >\r\n              Log Out\r\n            </Button>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n      {!!chatConfig &&\r\n        chatConfig.userName &&\r\n        chatConfig.projectID &&\r\n        chatConfig.userSecret && (\r\n          <ChatEngine\r\n            height=\"100vh\"\r\n            width=\"100vw\"\r\n            userName={chatConfig.userName}\r\n            projectID={chatConfig.projectID}\r\n            userSecret={chatConfig.userSecret}\r\n            onConnect={() => {\r\n              getChats(chatConfig, setMyChats);\r\n            }}\r\n            onNewChat={(chat) => {\r\n              if (chat.admin.username === chatConfig.userName) {\r\n                selectChatClick(chat);\r\n              }\r\n              setMyChats([...myChats, chat].sort((a, b) => a.id - b.id));\r\n            }}\r\n            onDeleteChat={(chat) => {\r\n              if (selectedChat?.id === chat.id) {\r\n                setSelectedChat(null);\r\n              }\r\n              setMyChats(\r\n                myChats\r\n                  .filter((c) => c.id !== chat.id)\r\n                  .sort((a, b) => a.id - b.id)\r\n              );\r\n            }}\r\n          />\r\n        )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\hooks\\useAuth.js",[],"C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\hooks\\useResolved.js",[],"C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\FormField.js",["114","115","116","117","118","119","120"],"import { Field, ErrorMessage } from \"formik\";\r\nimport React from \"react\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Avatar,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport \"../../src/index.css\";\r\nimport InputTextfield from \"./InputTextfield\";\r\n\r\nfunction FormField(props) {\r\n  return (\r\n    // <label>\r\n    //   {props.label}\r\n    <>\r\n      <label className=\"text-light\">{props.label}</label>\r\n      <div className=\"text-light\">\r\n        <Field as=\"input\" type={props.type} name={props.name} fullWidth></Field>\r\n        <ErrorMessage\r\n          className=\"text-danger\"\r\n          component=\"div\"\r\n          name={props.name}\r\n        ></ErrorMessage>\r\n        {/* </label> */}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default FormField;\r\n","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\context\\ChatContext.js",[],"C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\Scheduler.js",["121","122","123","124","125","126","127","128","129"],"C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\PrivateRoute.js",["130"],"import { useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../context/AuthContext\";\r\nimport { useResolved } from \"../hooks/useResolved\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth();\r\n  useEffect(() => {\r\n    console.log(currentUser);\r\n  }, [currentUser]);\r\n\r\n  const content = (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        return currentUser ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        );\r\n      }}\r\n    ></Route>\r\n  );\r\n  console.log(content);\r\n  return { content };\r\n}\r\n","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\context\\AuthContext.js",[],"C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\SchedulerTeacher.js",["131","132","133","134","135","136"],"import { useCallback, useState, useEffect, useRef } from \"react\";\r\nimport CustomNavbar from \"./CustomNavbar\";\r\nimport { Container, Button, Card, Form, Row, Col } from \"react-bootstrap\";\r\nimport StudentDetailItem from \"./StudentDetailItem\";\r\nimport BasicTable from \"./SchedulerTeacherTable\";\r\nimport { Pie, defaults } from \"react-chartjs-2\";\r\nimport { FieldArray } from \"formik\";\r\nimport CreateNewForm from \"./CreateNewForm\";\r\nimport CustomOptions from \"./CustomOptions\";\r\n\r\nexport default function SchedulerTeacher() {\r\n  const [details, setdetails] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [oddTableData, setOddTableData] = useState([]);\r\n  const [evenTableData, setEvenTableData] = useState([]);\r\n  const selectedBranchRef = useRef();\r\n  const selectedFormRef = useRef();\r\n  const [chartDataArray, setChartDataArray] = useState([]);\r\n  const [chartThings, setChartThings] = useState(false);\r\n  const [branchThings, setBranchThings] = useState(false);\r\n  const [form, setForm] = useState(\"\");\r\n  const [formOptions, setFormOptions] = useState([]);\r\n  const [preferenceOptions, setPreferenceOptions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchForms = async () => {\r\n      const response = await fetch(\r\n        \"https://working-chat-app-28c9d-default-rtdb.asia-southeast1.firebasedatabase.app/forms.json\"\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n      const data = await response.json();\r\n\r\n      let tempFormOptions = [];\r\n      let tempPreferenceOptions = [];\r\n\r\n      for (const key in data) {\r\n        tempFormOptions.push(key);\r\n      }\r\n      console.log(tempFormOptions);\r\n      setFormOptions([...tempFormOptions]);\r\n    };\r\n    fetchForms();\r\n  }, []);\r\n\r\n  const fetchPreferenceOptions = async (selectedForm) => {\r\n    const response = await fetch(\r\n      \"https://working-chat-app-28c9d-default-rtdb.asia-southeast1.firebasedatabase.app/forms/\" +\r\n        selectedForm +\r\n        \"/.json\"\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(\"Something went wrong!\");\r\n    }\r\n    const data = await response.json();\r\n\r\n    let tempPreferenceOptions = [];\r\n    for (const key in data) {\r\n      tempPreferenceOptions.push(data[key].option1);\r\n      tempPreferenceOptions.push(data[key].option2);\r\n    }\r\n    console.log(tempPreferenceOptions);\r\n    setPreferenceOptions([...tempPreferenceOptions]);\r\n  };\r\n\r\n  const generateTablesHandler = () => {\r\n    if (details.length > 0) {\r\n      var arr = [...details];\r\n      arr.sort((a, b) => (a.cgpa < b.cgpa ? 1 : -1));\r\n\r\n      let max_val_odd = arr.length / 2;\r\n      let max_val_even = arr.length - max_val_odd;\r\n      let odd_count = 0;\r\n      let even_count = 0;\r\n\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].preference === preferenceOptions[0]) {\r\n          if (odd_count < max_val_odd) {\r\n            arr[i] = { ...arr[i], assignedPreference: preferenceOptions[0] };\r\n            odd_count++;\r\n          } else {\r\n            arr[i] = { ...arr[i], assignedPreference: preferenceOptions[1] };\r\n            even_count++;\r\n          }\r\n        } else {\r\n          if (even_count < max_val_even) {\r\n            arr[i] = { ...arr[i], assignedPreference: preferenceOptions[1] };\r\n            even_count++;\r\n          } else {\r\n            arr[i] = { ...arr[i], assignedPreference: preferenceOptions[0] };\r\n            odd_count++;\r\n          }\r\n        }\r\n      }\r\n      let oddDayTable = [];\r\n      let evenDayTable = [];\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i].assignedPreference === preferenceOptions[0]) {\r\n          oddDayTable.push({ ...arr[i] });\r\n        } else {\r\n          evenDayTable.push({ ...arr[i] });\r\n        }\r\n      }\r\n      console.log(oddDayTable);\r\n      console.log(evenDayTable);\r\n      console.log(arr);\r\n      setTableData([...arr]);\r\n      setOddTableData([...oddDayTable]);\r\n      setEvenTableData([...evenDayTable]);\r\n    }\r\n  };\r\n\r\n  const fetchStudentHandler = async (selectedBranch) => {\r\n    const response = await fetch(\r\n      \"https://working-chat-app-28c9d-default-rtdb.asia-southeast1.firebasedatabase.app/\" +\r\n        form +\r\n        \"/\" +\r\n        selectedBranch +\r\n        \".json\"\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(\"Something went wrong!\");\r\n    }\r\n    const data = await response.json();\r\n    console.log(data);\r\n    let option1Count = 0;\r\n    let option2Count = 0;\r\n\r\n    const studentList = [];\r\n    for (const key in data) {\r\n      studentList.push({\r\n        id: key,\r\n        ...data[key],\r\n      });\r\n      if (data[key].preference === preferenceOptions[0]) {\r\n        option1Count++;\r\n      } else {\r\n        option2Count++;\r\n      }\r\n    }\r\n    setChartDataArray([option1Count, option2Count]);\r\n    setChartThings(true);\r\n    setdetails(studentList);\r\n  };\r\n  const content = details.map((studentData) => {\r\n    return (\r\n      <StudentDetailItem\r\n        {...studentData}\r\n        key={studentData.id}\r\n      ></StudentDetailItem>\r\n    );\r\n  });\r\n  const handlebranchSelect = (e) => {\r\n    e.preventDefault();\r\n    fetchStudentHandler(selectedBranchRef.current.value);\r\n  };\r\n\r\n  const selectedFormHandler = (e) => {\r\n    e.preventDefault();\r\n    setForm(selectedFormRef.current.value);\r\n    fetchPreferenceOptions(selectedFormRef.current.value);\r\n    console.log(selectedFormRef.current.value);\r\n    setBranchThings(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CustomNavbar desk=\"Teacher's Desk\"></CustomNavbar>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Container>\r\n              <label className=\"my-4\">\r\n                <h3>Select the Preference form to view the results</h3>{\" \"}\r\n              </label>\r\n\r\n              <Form onSubmit={selectedFormHandler}>\r\n                <Form.Select\r\n                  aria-label=\"Default select example\"\r\n                  ref={selectedFormRef}\r\n                  className=\"bg-dark text-light\"\r\n                >\r\n                  <option>Select Form</option>\r\n                  {formOptions.map((option) => {\r\n                    return (\r\n                      <CustomOptions\r\n                        value={option}\r\n                        text={option}\r\n                      ></CustomOptions>\r\n                    );\r\n                  })}\r\n                </Form.Select>\r\n                <Container className=\"d-flex justify-content-center\">\r\n                  <Button\r\n                    className=\"mt-3 btn-outline-dark text-light\"\r\n                    variant=\"danger\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Container>\r\n              </Form>\r\n            </Container>\r\n          </Col>\r\n          <Col>\r\n            <CreateNewForm></CreateNewForm>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      {branchThings && (\r\n        <Container>\r\n          <label className=\"my-4\">\r\n            <h3>Select the branch below to view responses of the students</h3>{\" \"}\r\n          </label>\r\n\r\n          <Form onSubmit={handlebranchSelect}>\r\n            <Form.Select\r\n              aria-label=\"Default select example\"\r\n              ref={selectedBranchRef}\r\n              className=\"bg-dark text-light\"\r\n            >\r\n              <option>Select Branch</option>\r\n              <option value=\"CSE\">CSE</option>\r\n              <option value=\"ECE\">ECE</option>\r\n              <option value=\"EEE\">EEE</option>\r\n            </Form.Select>\r\n            <Container className=\"d-flex justify-content-center\">\r\n              <Button\r\n                className=\"mt-3 btn-outline-dark text-light\"\r\n                variant=\"danger\"\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Container>\r\n          </Form>\r\n        </Container>\r\n      )}\r\n      {/* <Card>\r\n        <Button onClick={fetchStudentHandler}>Fetch Student preferences</Button>\r\n      </Card> */}\r\n\r\n      <Container>\r\n        <Row>\r\n          <Col sm={8}>\r\n            {\" \"}\r\n            <Container className=\"d-flex my-4 infoCards\"> {content}</Container>\r\n          </Col>\r\n          <Col sm={4}>\r\n            <div className=\"my-4\">\r\n              <Pie\r\n                data={{\r\n                  labels: [...preferenceOptions],\r\n                  datasets: [\r\n                    {\r\n                      label: \"# of votes\",\r\n                      data: [...chartDataArray],\r\n                      backgroundColor: [\r\n                        \"rgba(255, 99, 132, 0.2)\",\r\n                        \"rgba(54, 162, 235, 0.2)\",\r\n                      ],\r\n                      borderColor: [\r\n                        \"rgba(255, 99, 132, 1)\",\r\n                        \"rgba(54, 162, 235, 1)\",\r\n                      ],\r\n                      borderWidth: 1,\r\n                    },\r\n                  ],\r\n                }}\r\n                height={400}\r\n                width={600}\r\n                options={{\r\n                  maintainAspectRatio: false,\r\n                  // scales: {\r\n                  //   yAxes: [\r\n                  //     {\r\n                  //       ticks: {\r\n                  //         beginAtZero: true,\r\n                  //       },\r\n                  //     },\r\n                  //   ],\r\n                  // },\r\n                  legend: {\r\n                    labels: {\r\n                      fontSize: 25,\r\n                    },\r\n                  },\r\n                  plugins: {\r\n                    title: {\r\n                      display: chartThings,\r\n                      color: \"#e6e6e6\",\r\n                      text: \"Graphs stating preference of students\",\r\n                    },\r\n                    legend: {\r\n                      display: chartThings,\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {chartThings && (\r\n        <Container className=\"d-flex justify-content-center\">\r\n          <Button variant=\"danger text-light\" onClick={generateTablesHandler}>\r\n            Assign Preferences according to CGPA\r\n          </Button>{\" \"}\r\n        </Container>\r\n      )}\r\n\r\n      {/* {tableData.length > 0 && <BasicTable tableData={tableData} caption=\"List of students\"></BasicTable>} */}\r\n      {oddTableData.length > 0 && (\r\n        <BasicTable\r\n          tableData={oddTableData}\r\n          caption=\"Assigned Preference 1\"\r\n        ></BasicTable>\r\n      )}\r\n      {evenTableData.length > 0 && (\r\n        <BasicTable\r\n          tableData={evenTableData}\r\n          caption=\"Assigned Preference 2\"\r\n        ></BasicTable>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\CustomNavbar.js",["137","138"],"import {\r\n  Navbar,\r\n  Container,\r\n  Badge,\r\n  NavDropdown,\r\n  Button,\r\n  Nav,\r\n  NavbarBrand,\r\n} from \"react-bootstrap\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useChat } from \"../context/ChatContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fb } from \"../service/firebase\";\r\n\r\nimport React from \"react\";\r\n\r\nexport default function CustomNavbar(props) {\r\n  const { chatConfig } = useChat();\r\n  const logOutHandler = () => {\r\n    fb.auth.signOut();\r\n  };\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Container fluid>\r\n        <Navbar.Brand href=\"#home\">\r\n          <h1 className=\"text-danger\">Scheduler</h1>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <h5 className=\"mt-2 mx-4\">\r\n              <Link to=\"/\" className=\"text-decoration-none\">\r\n                Chat Room{\" \"}\r\n              </Link>\r\n            </h5>\r\n            <h3>\r\n              <Badge bg=\"secondary\">{props.desk}</Badge>\r\n            </h3>\r\n          </Nav>\r\n\r\n          <Nav>\r\n            <Avatar\r\n              className=\"mx-2\"\r\n              sx={{ height: \"70px\", width: \"70px\" }}\r\n            ></Avatar>\r\n            <Navbar.Brand className=\"text-light\">\r\n              <h4>\r\n                {\" \"}\r\n                {chatConfig\r\n                  ? chatConfig.userName.charAt(0).toUpperCase() +\r\n                    chatConfig.userName.slice(1)\r\n                  : \" \"}{\" \"}\r\n              </h4>\r\n            </Navbar.Brand>\r\n            <Button\r\n              className=\"btn-outline-dark text-light\"\r\n              variant=\"secondary\"\r\n              onClick={logOutHandler}\r\n            >\r\n              Log Out\r\n            </Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\StudentDetailItem.js",["139","140","141"],"import React from \"react\";\r\nimport { Card, Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function StudentDetailItem(props) {\r\n  return (\r\n    <>\r\n      <Card\r\n        // style={{ length: \"18rem\" }}\r\n        className=\"mx-3 my-2\"\r\n        bg=\"dark\"\r\n        text=\"light\"\r\n      >\r\n        <Card.Body>\r\n          <Card.Title>{props.name.toUpperCase()}</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            {props.branch}\r\n          </Card.Subtitle>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            {props.roll}\r\n          </Card.Subtitle>\r\n          <Card.Text>\r\n            GPA: {props.cgpa} <br></br> Preference: {props.preference}{\" \"}\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\SchedulerTeacherTable.js",[],"C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\InputTextfield.js",[],"C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\CreateNewForm.js",["142","143","144","145","146","147","148","149","150","151","152","153"],"import { useRef, useState, useEffect } from \"react\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport { useChat } from \"../context/ChatContext\";\r\nimport { getChat } from \"react-chat-engine\";\r\nimport CustomNavbar from \"./CustomNavbar\";\r\nimport { fb } from \"../service/firebase\";\r\nimport {\r\n  Navbar,\r\n  Card,\r\n  Form,\r\n  FormGroup,\r\n  Button,\r\n  Alert,\r\n  Container,\r\n  Nav,\r\n  NavDropdown,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\n\r\nexport default function CreateNewForm() {\r\n  const nameRef = useRef();\r\n  const firstOptionRef = useRef();\r\n  const secondOptionRef = useRef();\r\n\r\n  async function addIntoForms(newForm) {\r\n    const response = await fetch(\r\n      \"https://working-chat-app-28c9d-default-rtdb.asia-southeast1.firebasedatabase.app/forms/\" +\r\n        newForm.name +\r\n        \".json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newForm),\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    console.log(data);\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(\r\n      nameRef.current.value,\r\n      firstOptionRef.current.value,\r\n      secondOptionRef.current.value\r\n    );\r\n\r\n    const newForm = {\r\n      name: nameRef.current.value,\r\n      option1: firstOptionRef.current.value,\r\n      option2: secondOptionRef.current.value,\r\n    };\r\n\r\n    nameRef.current.value = \"\";\r\n    firstOptionRef.current.value = \"\";\r\n    secondOptionRef.current.value = \"\";\r\n\r\n    addIntoForms(newForm);\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row className=\" justify-content-center align-self-center\">\r\n          <Col\r\n            xs={8}\r\n            className=\"mx-auto justify-content-center align-self-center\"\r\n          >\r\n            <Card\r\n              className=\"mt-4\"\r\n              // style={{\r\n              //   width: \"50rem\",\r\n              // }}\r\n              bg=\"dark\"\r\n              text=\"light\"\r\n            >\r\n              <Card.Body>\r\n                <Form onSubmit={submitHandler}>\r\n                  <Form.Group className=\"mb-3\" id=\"name\">\r\n                    <Form.Label>Name of the Form</Form.Label>\r\n                    <Form.Control\r\n                      className=\"form-bg-student\"\r\n                      type=\"text\"\r\n                      ref={nameRef}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\" id=\"firstOption\">\r\n                    <Form.Label>1st Option</Form.Label>\r\n                    <Form.Control\r\n                      className=\"form-bg-student\"\r\n                      type=\"text\"\r\n                      ref={firstOptionRef}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\" id=\"secondOption\">\r\n                    <Form.Label>2nd Option</Form.Label>\r\n                    <Form.Control\r\n                      className=\"form-bg-student\"\r\n                      type=\"text\"\r\n                      ref={secondOptionRef}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Button\r\n                    variant=\"danger text-light\"\r\n                    className=\"w-100 mt-3\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Create New Preference Form\r\n                  </Button>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\React Projects\\Engage Projects\\Working Chat App\\Working model 1\\src\\components\\CustomOptions.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":1,"column":21,"nodeType":"160","messageId":"161","endLine":1,"endColumn":29},{"ruleId":"158","severity":1,"message":"162","line":2,"column":10,"nodeType":"160","messageId":"161","endLine":2,"endColumn":14},{"ruleId":"158","severity":1,"message":"163","line":2,"column":43,"nodeType":"160","messageId":"161","endLine":2,"endColumn":51},{"ruleId":"158","severity":1,"message":"164","line":4,"column":10,"nodeType":"160","messageId":"161","endLine":4,"endColumn":21},{"ruleId":"158","severity":1,"message":"165","line":11,"column":8,"nodeType":"160","messageId":"161","endLine":11,"endColumn":20},{"ruleId":"158","severity":1,"message":"163","line":3,"column":22,"nodeType":"160","messageId":"161","endLine":3,"endColumn":30},{"ruleId":"158","severity":1,"message":"162","line":3,"column":32,"nodeType":"160","messageId":"161","endLine":3,"endColumn":36},{"ruleId":"158","severity":1,"message":"166","line":12,"column":3,"nodeType":"160","messageId":"161","endLine":12,"endColumn":9},{"ruleId":"158","severity":1,"message":"167","line":13,"column":3,"nodeType":"160","messageId":"161","endLine":13,"endColumn":12},{"ruleId":"158","severity":1,"message":"168","line":14,"column":3,"nodeType":"160","messageId":"161","endLine":14,"endColumn":9},{"ruleId":"158","severity":1,"message":"169","line":18,"column":10,"nodeType":"160","messageId":"161","endLine":18,"endColumn":14},{"ruleId":"158","severity":1,"message":"170","line":21,"column":8,"nodeType":"160","messageId":"161","endLine":21,"endColumn":14},{"ruleId":"158","severity":1,"message":"169","line":5,"column":10,"nodeType":"160","messageId":"161","endLine":5,"endColumn":14},{"ruleId":"158","severity":1,"message":"171","line":5,"column":16,"nodeType":"160","messageId":"161","endLine":5,"endColumn":25},{"ruleId":"158","severity":1,"message":"166","line":12,"column":3,"nodeType":"160","messageId":"161","endLine":12,"endColumn":9},{"ruleId":"158","severity":1,"message":"167","line":13,"column":3,"nodeType":"160","messageId":"161","endLine":13,"endColumn":12},{"ruleId":"158","severity":1,"message":"168","line":14,"column":3,"nodeType":"160","messageId":"161","endLine":14,"endColumn":9},{"ruleId":"158","severity":1,"message":"172","line":23,"column":11,"nodeType":"160","messageId":"161","endLine":23,"endColumn":19},{"ruleId":"158","severity":1,"message":"172","line":23,"column":9,"nodeType":"160","messageId":"161","endLine":23,"endColumn":17},{"ruleId":"158","severity":1,"message":"173","line":4,"column":3,"nodeType":"160","messageId":"161","endLine":4,"endColumn":7},{"ruleId":"158","severity":1,"message":"174","line":5,"column":3,"nodeType":"160","messageId":"161","endLine":5,"endColumn":8},{"ruleId":"158","severity":1,"message":"166","line":6,"column":3,"nodeType":"160","messageId":"161","endLine":6,"endColumn":9},{"ruleId":"158","severity":1,"message":"167","line":7,"column":3,"nodeType":"160","messageId":"161","endLine":7,"endColumn":12},{"ruleId":"158","severity":1,"message":"168","line":8,"column":3,"nodeType":"160","messageId":"161","endLine":8,"endColumn":9},{"ruleId":"158","severity":1,"message":"175","line":9,"column":3,"nodeType":"160","messageId":"161","endLine":9,"endColumn":13},{"ruleId":"158","severity":1,"message":"176","line":12,"column":8,"nodeType":"160","messageId":"161","endLine":12,"endColumn":22},{"ruleId":"158","severity":1,"message":"177","line":4,"column":10,"nodeType":"160","messageId":"161","endLine":4,"endColumn":17},{"ruleId":"158","severity":1,"message":"178","line":8,"column":3,"nodeType":"160","messageId":"161","endLine":8,"endColumn":9},{"ruleId":"158","severity":1,"message":"179","line":11,"column":3,"nodeType":"160","messageId":"161","endLine":11,"endColumn":12},{"ruleId":"158","severity":1,"message":"180","line":15,"column":3,"nodeType":"160","messageId":"161","endLine":15,"endColumn":6},{"ruleId":"158","severity":1,"message":"181","line":16,"column":3,"nodeType":"160","messageId":"161","endLine":16,"endColumn":14},{"ruleId":"158","severity":1,"message":"182","line":24,"column":11,"nodeType":"160","messageId":"161","endLine":24,"endColumn":21},{"ruleId":"158","severity":1,"message":"183","line":51,"column":11,"nodeType":"160","messageId":"161","endLine":51,"endColumn":32},{"ruleId":"158","severity":1,"message":"184","line":62,"column":10,"nodeType":"160","messageId":"161","endLine":62,"endColumn":15},{"ruleId":"158","severity":1,"message":"185","line":62,"column":17,"nodeType":"160","messageId":"161","endLine":62,"endColumn":25},{"ruleId":"158","severity":1,"message":"164","line":4,"column":10,"nodeType":"160","messageId":"161","endLine":4,"endColumn":21},{"ruleId":"158","severity":1,"message":"186","line":1,"column":10,"nodeType":"160","messageId":"161","endLine":1,"endColumn":21},{"ruleId":"158","severity":1,"message":"169","line":3,"column":29,"nodeType":"160","messageId":"161","endLine":3,"endColumn":33},{"ruleId":"158","severity":1,"message":"187","line":6,"column":15,"nodeType":"160","messageId":"161","endLine":6,"endColumn":23},{"ruleId":"158","severity":1,"message":"188","line":7,"column":10,"nodeType":"160","messageId":"161","endLine":7,"endColumn":20},{"ruleId":"158","severity":1,"message":"189","line":13,"column":10,"nodeType":"160","messageId":"161","endLine":13,"endColumn":19},{"ruleId":"158","severity":1,"message":"183","line":36,"column":11,"nodeType":"160","messageId":"161","endLine":36,"endColumn":32},{"ruleId":"158","severity":1,"message":"181","line":5,"column":3,"nodeType":"160","messageId":"161","endLine":5,"endColumn":14},{"ruleId":"158","severity":1,"message":"190","line":8,"column":3,"nodeType":"160","messageId":"161","endLine":8,"endColumn":14},{"ruleId":"158","severity":1,"message":"171","line":2,"column":16,"nodeType":"160","messageId":"161","endLine":2,"endColumn":25},{"ruleId":"158","severity":1,"message":"191","line":2,"column":27,"nodeType":"160","messageId":"161","endLine":2,"endColumn":30},{"ruleId":"158","severity":1,"message":"192","line":2,"column":32,"nodeType":"160","messageId":"161","endLine":2,"endColumn":35},{"ruleId":"158","severity":1,"message":"159","line":1,"column":18,"nodeType":"160","messageId":"161","endLine":1,"endColumn":26},{"ruleId":"158","severity":1,"message":"193","line":1,"column":28,"nodeType":"160","messageId":"161","endLine":1,"endColumn":37},{"ruleId":"158","severity":1,"message":"194","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":15},{"ruleId":"158","severity":1,"message":"195","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":17},{"ruleId":"158","severity":1,"message":"177","line":4,"column":10,"nodeType":"160","messageId":"161","endLine":4,"endColumn":17},{"ruleId":"158","severity":1,"message":"196","line":5,"column":8,"nodeType":"160","messageId":"161","endLine":5,"endColumn":20},{"ruleId":"158","severity":1,"message":"197","line":6,"column":10,"nodeType":"160","messageId":"161","endLine":6,"endColumn":12},{"ruleId":"158","severity":1,"message":"178","line":8,"column":3,"nodeType":"160","messageId":"161","endLine":8,"endColumn":9},{"ruleId":"158","severity":1,"message":"179","line":11,"column":3,"nodeType":"160","messageId":"161","endLine":11,"endColumn":12},{"ruleId":"158","severity":1,"message":"198","line":13,"column":3,"nodeType":"160","messageId":"161","endLine":13,"endColumn":8},{"ruleId":"158","severity":1,"message":"180","line":15,"column":3,"nodeType":"160","messageId":"161","endLine":15,"endColumn":6},{"ruleId":"158","severity":1,"message":"181","line":16,"column":3,"nodeType":"160","messageId":"161","endLine":16,"endColumn":14},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Redirect' is defined but never used.","'useResolved' is defined but never used.","'PrivateRoute' is defined but never used.","'Avatar' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'zIndex' is defined but never used.","'Container' is defined but never used.","'authUser' is assigned a value but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'InputTextfield' is defined but never used.","'getChat' is defined but never used.","'Navbar' is defined but never used.","'FormGroup' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'chatConfig' is assigned a value but never used.","'tempPreferenceOptions' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'useCallback' is defined but never used.","'defaults' is defined but never used.","'FieldArray' is defined but never used.","'tableData' is assigned a value but never used.","'NavbarBrand' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'useEffect' is defined but never used.","'useAuth' is defined but never used.","'useChat' is defined but never used.","'CustomNavbar' is defined but never used.","'fb' is defined but never used.","'Alert' is defined but never used.","no-global-assign","no-unsafe-negation"]